<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapping.CompanyMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.Company" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="flights" property="flights" jdbcType="INTEGER" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="airways" property="airways" jdbcType="INTEGER" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="scope" property="scope" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, flights, company, airways, country, scope
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_company
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_company
  </select>
   <select id="selectCompanyCountByWhere" resultType="java.lang.Long" parameterType="com.pojo.Company" >
    select 
    count(1)
    from t_company where 1=1 
      <if test="company != null and company != ''" >
         and company like CONCAT('%',#{company},'%' )  
      </if>
  </select>
  
  <select id="selectCompanyByWhere" resultMap="BaseResultMap" parameterType="com.pojo.Company" >
    select 
    <include refid="Base_Column_List" />
    from t_company where 1=1 
      <if test="company != null and company != ''" >
         and company like CONCAT('%',#{company},'%' )  
      </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_company
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.Company" >
    insert into t_company ( flights, company, 
      airways, country, scope
      )
    values ( #{flights,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, 
      #{airways,jdbcType=INTEGER}, #{country,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Company" >
    insert into t_company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="flights != null" >
        flights,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="airways != null" >
        airways,
      </if>
      <if test="country != null" >
        country,
      </if>
        <if test="scope != null" >
        scope,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="flights != null" >
        #{flights,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="airways != null" >
        #{airways,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="scope != null" >
        #{scope,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Company" >
    update t_company
    <set >
      <if test="flights != null" >
        flights = #{flights,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="airways != null" >
        airways = #{airways,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="scope != null" >
        scope = #{scope,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Company" >
    update t_company
    set flights = #{flights,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      airways = #{airways,jdbcType=INTEGER},
      country = #{country,jdbcType=VARCHAR},
      scope = #{scope,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>