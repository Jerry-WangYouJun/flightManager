<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapping.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.Department" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="deptDesc" property="deptdesc" jdbcType="VARCHAR" />
    <result column="deptLeader" property="deptleader" jdbcType="VARCHAR" />
    <result column="deptName" property="deptname" jdbcType="VARCHAR" />
    <result column="deptNo" property="deptno" jdbcType="VARCHAR" />
    <result column="deptTel" property="depttel" jdbcType="VARCHAR" />
    <result column="parentDeptId" property="parentdeptid" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
	<select id="selectDept" parameterType="com.pojo.Department" resultMap="departmentResult">
		select
		b.id ,
		B.deptDesc,
		B.deptLeader,
		B.deptName,
		B.deptNo,
		B.deptTel,
		B.parentDeptId dept_parent_id,
		B.remark,
		A.id parent_id,
		A.deptNo parent_deptNo
		From department B
		left outer join department A on B.parentDeptId = A.id 
		where 1=1  
		<if test="deptno != null and deptno != ''" >
		 and B.deptno like  CONCAT('%',#{deptno},'%' )  
      </if>
      <if test="deptname != null and deptname != ''" >
         and B.deptname like CONCAT('%',#{deptname},'%' )  
      </if>
      <if test="parentno != null and parentno != ''" >
         and A.deptNo like CONCAT('%',#{parentno},'%' )  
       </if>
	</select>
  <resultMap id="departmentResult" type="com.pojo.Department">
		<id column="id" property="id" jdbcType="INTEGER" />
	    <result column="deptDesc" property="deptdesc" jdbcType="VARCHAR" />
	    <result column="deptLeader" property="deptleader" jdbcType="VARCHAR" />
	    <result column="deptName" property="deptname" jdbcType="VARCHAR" />
	    <result column="deptNo" property="deptno" jdbcType="VARCHAR" />
	    <result column="deptTel" property="depttel" jdbcType="VARCHAR" />
	    <result column="dept_parent_id" property="parentdeptid" jdbcType="VARCHAR" />
	    <result column="remark" property="remark" jdbcType="VARCHAR" />
		<association property="department" column="dept_parent_id"
			javaType="com.pojo.Department">
			<id property="id" column="parent_id" />
			<result property="deptno" column="parent_deptNo" />
		</association>
	</resultMap>
  <sql id="Base_Column_List" >
    ID, deptDesc, deptLeader, deptName, deptNo, deptTel, parentDeptId, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from department
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAllDepts"  resultMap="BaseResultMap"  >
    select  <include refid="Base_Column_List" /> from department
  </select>
  
    <select id="selectDeptByWhere" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
    <include refid="Base_Column_List" />
    from department
  </select>
  
    <select id="selectDeptCountByWhere" resultType="java.lang.Long" parameterType="com.pojo.Department" >
    select 
    	count(*) 
    from  department B
		left outer join department A on B.parentDeptId = A.id 
    where 1=1
      <if test="deptno != null and deptno != ''" >
         and B.deptno like  CONCAT('%',#{deptno},'%' )  
      </if>
      <if test="deptname != null and deptname != ''" >
         and B.deptname like CONCAT('%',#{deptname},'%' )  
      </if>
      <if test="parentno != null and parentno != ''" >
         and A.deptno like CONCAT('%',#{parentno},'%' )  
       </if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from department
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.Department" >
    insert into department (ID, deptDesc, deptLeader, 
      deptName, deptNo, deptTel, 
      parentDeptId, remark)
    values (#{id,jdbcType=INTEGER}, #{deptdesc,jdbcType=VARCHAR}, #{deptleader,jdbcType=VARCHAR}, 
      #{deptname,jdbcType=VARCHAR}, #{deptno,jdbcType=VARCHAR}, #{depttel,jdbcType=VARCHAR}, 
      #{parentdeptid,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Department" >
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="deptdesc != null" >
        deptDesc,
      </if>
      <if test="deptleader != null" >
        deptLeader,
      </if>
      <if test="deptname != null" >
        deptName,
      </if>
      <if test="deptno != null" >
        deptNo,
      </if>
      <if test="depttel != null" >
        deptTel,
      </if>
      <if test="parentdeptid != null" >
        parentDeptId,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deptdesc != null" >
        #{deptdesc,jdbcType=VARCHAR},
      </if>
      <if test="deptleader != null" >
        #{deptleader,jdbcType=VARCHAR},
      </if>
      <if test="deptname != null" >
        #{deptname,jdbcType=VARCHAR},
      </if>
      <if test="deptno != null" >
        #{deptno,jdbcType=VARCHAR},
      </if>
      <if test="depttel != null" >
        #{depttel,jdbcType=VARCHAR},
      </if>
      <if test="parentdeptid != null" >
        #{parentdeptid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Department" >
    update department
    <set >
      <if test="deptdesc != null" >
        deptDesc = #{deptdesc,jdbcType=VARCHAR},
      </if>
      <if test="deptleader != null" >
        deptLeader = #{deptleader,jdbcType=VARCHAR},
      </if>
      <if test="deptname != null" >
        deptName = #{deptname,jdbcType=VARCHAR},
      </if>
      <if test="deptno != null" >
        deptNo = #{deptno,jdbcType=VARCHAR},
      </if>
      <if test="depttel != null" >
        deptTel = #{depttel,jdbcType=VARCHAR},
      </if>
      <if test="parentdeptid != null" >
        parentDeptId = #{parentdeptid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Department" >
    update department
    set deptDesc = #{deptdesc,jdbcType=VARCHAR},
      deptLeader = #{deptleader,jdbcType=VARCHAR},
      deptName = #{deptname,jdbcType=VARCHAR},
      deptNo = #{deptno,jdbcType=VARCHAR},
      deptTel = #{depttel,jdbcType=VARCHAR},
      parentDeptId = #{parentdeptid,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>